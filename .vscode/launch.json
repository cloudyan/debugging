{
  // 使用 IntelliSense 了解相关属性。
  // 悬停以查看现有属性的描述。
  // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [

    // 调试 es5 脚本
    {
      "type": "node",
      "request": "launch",
      "name": "nodejs: es5",
      "program": "${workspaceFolder}/packages/nodejs/src/es5.js",
      "skipFiles": [
        "<node_internals>/**"
      ]
    },
    // 调试 es6 脚本
    {
      "type": "node",
      "request": "launch",
      "name": "nodejs: es6",
      // npx babel-node --presets=@babel/preset-env
      "program": "${workspaceFolder}/packages/nodejs/src/index.js",
      // 或者使用全局安装的 babel-node `npm i -g @babel/node @babel/core @babel/preset-env`
      "runtimeExecutable": "${workspaceFolder}/node_modules/.bin/babel-node", // 改用 babel-node 执行, 而不是 node
      "skipFiles": [
        "<node_internals>/**"
      ]
    },
    // 调试 npm script 命令
    // 执行 npm run debug
    {
      "type": "node",
      "name": "npm script: debug",
      "request": "launch",
      "runtimeExecutable": "npm",
      "runtimeArgs": [
        "run-script",
        "debug"
      ],
      "port": 9229,
      "skipFiles": [
        "<node_internals>/**"
      ],
      "cwd": "${workspaceFolder}" // 指定程序启动调试的目录
    },

    // 默认
    {
      "type": "node",
      "request": "attach",
      "name": "Attach",
      "port": 9229,
      "skipFiles": [
        "<node_internals>/**"
      ]
    },

    // 调试 cpp
    {
      "name": "cpp: (lldb) Launch",
      "type": "cppdbg",
      "request": "launch",
      "preLaunchTask": "cpp:build", // 在launch之前运行的任务名，这个名字一定要跟tasks.json中的任务名字大小写一致
      "program": "${workspaceFolder}/packages/cpp/a.out", // 需要运行的是当前打开文件的目录中，名字和当前编译输出文件相同
      "args": [],
      "stopAtEntry": false, // 选为true则会在打开控制台后停滞，暂时不执行程序
      "cwd": "${workspaceFolder}", // 当前工作路径：当前文件所在的工作空间
      "environment": [],
      "externalConsole": false, // 是否使用外部控制台，选false的话，我的vscode会出现错误
      "MIMode": "lldb"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "启动程序",
      "program": "${file}"
    },
    // {
    //   "type": "node",
    //   "request": "launch",
    //   "name": "Launch via NPM",
    //   "runtimeExecutable": "npm",
    //   "runtimeArgs": [
    //     "run-script",
    //     "debug"
    //   ],
    //   "port": 9229
    // },

    // 调试 webpack 插件
    {
      "type": "node",
      "request": "launch",
      "name": "webpack:plugin",
      "program": "${workspaceFolder}/node_modules/webpack/bin/webpack.js",
      // "program": "${workspaceFolder}/node_modules/webpack-dev-server/bin/webpack-dev-server.js",
      "args": [
        // 默认为 `./webpack.config.js`
        // "--host", "0.0.0.0",
        "--config", "./webpack/build/webpack.config.js"
      ],
      "env" : { "NODE_ENV" : "production" },
      // "envFile": "${workspaceFolder}/xxx.env",
    },

    // 调试 jest
    {
      "type": "node",
      "request": "launch",
      "name": "jest:test",
      "program": "${workspaceFolder}/node_modules/.bin/jest",
      "args": [
        "${workspaceFolder}/packages/jest/_tests__/SyncHook.js"
      ],
    },

    // 调试 iOS Web (未生效)
    {
      "name": "iOS Web",
      "type": "chrome",
      "request": "attach",
      "port": 9000,
      "url": "http://localhost:8080/*",
      "webRoot": "${workspaceRoot}/packages/ios/examples"
    }
  ]
}
